<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- #6.1. myBatis(JDBC)설정 연결 설정하기 -->
	<bean id="realDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
       <property name="driverClassName" value="org.mariadb.jdbc.Driver" />
       <property name="url" value="jdbc:mariadb://localhost:3306/WebSocket?characterEncoding=UTF-8"/>
       <property name="username" value="user"/>
       <property name="password" value="user"/>
   </bean>
	
	<!-- log4jdbc 처리를 위한 dataSource Proxy처리 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource"/>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="[SQL]"/>
			</bean>
		</property>
	</bean>
	<!-- websocket handler -->
	<bean id="webSocketHandler" class="com.doyun.doyun.websocket.WebSocketHandler" />
 
	<websocket:handlers>
		<websocket:mapping handler="webSocketHandler" path="/chat" />
		<websocket:handshake-interceptors>
	         <bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
	      </websocket:handshake-interceptors>
 
	      <websocket:sockjs/>
	 </websocket:handlers>
	
		<!-- #6.2. myBatis(JDBC)설정 : SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- name=dataSource => 빈객체sqlSessionFactoryBean의  property명 dataSource임(setter)
		ref의 dataSource는 위에서 선언한 datasource 빈객체를 의미함. -->
		<property name="dataSource" ref="dataSource" />
		
		<!-- 여기서 classpath는 target/classes를 의미한다. -->
		<!-- src/main/resources 디렉토리에서 작성된 파일들은 classpath로 이동함. -->
		<property name="mapperLocations" value="classpath*:/mappers/**/*_SQL.xml"/>
		
		<!-- mybatis-config.xml파일 위치를 명시함. -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"/>
	</bean>
	<!-- #6.3. SqlSessionTemplate 마이바티스 스프링 연동모듈의 핵심기능.
	SqlSessionTemplate : SqlSession 인터페이스를 구현클래스
	여러 dao에서 공유하므로 메모리관리에 있어 최적화된 테크닉. -->
	<bean id="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" index="0" ref="sqlSessionFactory"/>
	</bean>
	<context:annotation-config></context:annotation-config>

	
	<!-- #11. 트랜잭션 처리를 위한 트랜잭션매니저 설정해야 한다. -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
<!-- 	몽고db관련 설정 -->
<!-- credential=>접속 할 유저의 정보. 아이디:비밀번호@db이름 -->
	<mongo:mongo-client id="mongoClient" host="localhost" port="27017" credential="user:user@chat" />
	<mongo:db-factory id="mongoDbFactory" dbname="chat" mongo-client-ref="mongoClient"/>
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	
	
</beans>

